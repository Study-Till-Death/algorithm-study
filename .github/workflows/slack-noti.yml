name: "Random reviwer"

on:
  pull_request:
    types:
      - opened
      - reopened
    branches: ['protectHeo','DGJSKIM', 'anjungin', 'unie11', 'realain']

permissions:
  pull-requests: write

jobs:
  random-reviwer:
    runs-on: ubuntu-latest
    steps:
      - id: random_reviewer
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            const me = '${{ github.event.pull_request.user.login }}';
            const response = await github.rest.orgs.listMembers({
              org: context.repo.owner,  // 조직 이름
            });
            
            const candidate = response.data.map(member => member.login);
            const candidateWithoutMe = candidate.filter(id => id !== me);
            
            function getRandomTwo(array) {
              if (array.length < 2) {
                throw new Error("Array must have at least two elements.");
              }
            
              const index1 = Math.floor(Math.random() * array.length);
              let index2;
            
              // 첫 번째 인덱스와 다른 값을 찾을 때까지 반복
              do {
              index2 = Math.floor(Math.random() * array.length);
            } while (index1 === index2);
            
              return [array[index1], array[index2]];
            }
            
            const electedReviewers = getRandomTwo(candidateWithoutMe);
            const comment = `@${electedReviewers[0]} 님, @${electedReviewers[1]} 님 숭고한 랜덤 리뷰어로 당첨되셨습니다! 리뷰를 부탁드립니다. 🙏`
            core.setOutput('reviewer_1', electedReviewers[0]);
            core.setOutput('reviewer_2', electedReviewers[1]);
            core.setOutput('comment', comment);

      - name: Create Pull Request Comment
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = "${{ steps.random_reviewer.outputs.comment }}";
            // Create comment 
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body : comment
            });

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Post to a Slack channel
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "🎉 축하합니다! \n\n *<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>* 의 리뷰어로 \n\n<@${{ steps.random_reviewer.outputs.reviewer_1 }}> 님과 <@${{ steps.random_reviewer.outputs.reviewer_2 }}> 님이 당선되었습니다! 🎉"
          }' \
           ${{ secrets.SLACK_WEBHOOK }}
